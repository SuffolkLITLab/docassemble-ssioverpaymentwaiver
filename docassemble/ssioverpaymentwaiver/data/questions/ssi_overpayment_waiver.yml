---
metadata:
  title: SSI Overpayment Waiver Request
  short title: Overpayment Waiver
  revision_date: 2021-10-05
---
features:
  question help button: True
  question back button: True
  default icons: material icons
  navigation: True
  javascript: 
    - ssa.js
    - phone.js
---
modules:
  - docassemble.GithubFeedbackForm.github_issue
---
default screen parts:
  under: |
    [:comment-dots: Feedback](${ feedback_link(user_info(), github_repo="docassemble-ssioverpaymentwaiver", github_user="nonprofittechy") })
  pre: |
    % if get_config('debug'):
    `id: ${ user_info().question_id }`
    % endif
---
include:
  - ssa_634.yml
  - financial_statement.yml
  #- docassemble.gbls:basic-questions-gbls.yml
  - docassemble.ssa:ssa.yml
  - docassemble.VLPBranding:vlp_branding.yml  
---
objects:
  - recordee: Individual
  - overpaid_persons: DAList.using(object_type=Individual,there_is_another=False)
  - beneficiary: Individual
  - ssa_office: Person
  - officelist: FieldOfficeList
---
modules:
  - .ssa
  - docassemble.ALToolbox.misc
  - .fix_currency
---
features:
  css: docassemble.ALToolbox:collapse_template.css  
---
sections:
  - Getting started
  - Who is requesting a waiver?
  - Information about the overpayment
  - Financial information
  - Finishing up
---
id: interview order
mandatory: True
scan for variables: False
code: |
  nav.set_section('Getting started')
  intro_screen
  client.name.first

  nav.set_section('Who is requesting a waiver?')
  client_is_overpaid_person
  household_questions
  recordee.name.first
  
  
  agree_overpaid
  if not agree_overpaid:
    continue_anyway
    
  recordee.ssn
  recordee.claim_number    
    
  if not household.there_are_any:
    household.target_number = 0
    household.gathered = True

  if not recordee == client:
    relationship_to_overpaid
  else:
    client_is_rep_payee = False
  
  beneficiary.name.first
  
  if has_spouse:
    spouse.name.first
  if household.there_are_any:
    review_household_members

  if overpaid_persons.there_are_any:
    review_overpaid_persons  
  
  nav.set_section('Information about the overpayment')
  
  if only_change_monthly_due:
    explain_ssa_634
    ssa_634
    saw_signature_choice
    if not (signature_choice == 'paper'):
      client.signature    
    download_pdf
  else:
    explain_ssa_632

  payment_type
  overpayment_reason
  overpayment_explanation

  overpayment_benefits_used_for

  if informed_ssa:
    if not informed_orally:
      how_when_where
    benefits_changed_after_contact

  overpayment_why_not_at_fault  
  
  if not possess_overpayment:
    if possessed_overpayment_at_notice:
      cant_return_explanation
  else:
    pay_ssa_explanation
  
  overpayment_pay_less_reasons
  affordable_amount

  first_overpayment

  gave_cash_after_notice
  expect_change
  
  nav.set_section('Financial information')
  evaluate_if_receives_benefits # We may already know--use code to set if true
  received_ssi
  if receives_benefits:
    receives_benefits_type
    cash_amount = DAEmpty()
    vehicles = DAEmpty()
    household.jobs = DAEmpty()
    household.incomes = DAEmpty()
    client.jobs = DAEmpty()
    client.incomes =  DAEmpty()
    spouse.jobs = DAEmpty()
    spouse.incomes = DAEmpty()
    expenses = DAEmpty()
    real_estate = DAEmpty()
    assets = DAEmpty()
    assets_cannot_be_sold = DAEmpty()
    assets_cannot_be_converted = DAEmpty()
    accounts_special_purpose = DAEmpty()
    dont_need_financials_explanation
    expenses_exceed_income = DAEmpty()
    expense_other_details = DAEmpty()
  else:
    need_financials_explanation
    cash_amount
    financial_statement_questions
    if assets.there_are_any:
      accounts_special_purpose
    if non_cash_assets:
      assets_cannot_be_converted
    if vehicles.there_are_any or real_estate.there_are_any:
      assets_cannot_be_sold
    if expenses_exceed_income:
      expenses_exceed_income_explanation
    
  nav.set_section('Finishing up')
  client.address.address
  ssa_office.name.text
  
  preview_pdf
  
  run_signature_flow
  #saw_signature_choice
  #if not (signature_choice == 'paper'):
  #  if 
  #  client.signature
  
  store_variables_snapshot(data={'zip':client.address.zip,
    'state':client.address.state,
    'client_is_rep_payee':client_is_rep_payee,
    'client_goals':client_goals.true_values(),
    'agree_overpaid': agree_overpaid,
    'payment_type':payment_type.true_values(),
    'overpayment_reason': overpayment_reason,
    'possess_overpayment': possess_overpayment,
    'overpayment_pay_less_reasons': overpayment_pay_less_reasons,
    'informed_ssa':informed_ssa,
    'expect_change': expect_change.true_values(),
    'cant_pay_at_all': cant_pay_at_all,
    'informed_ssa': informed_ssa,
    'first_overpayment': first_overpayment,
    'receives_benefits': receives_benefits,
    'date':today(),
    })  
  download_pdf
  #financial_statement_download_screen
---
id: client_is_overpaid_person
question: |
  Are you filing for yourself or someone else?
fields:
  - no label: filing_for
    datatype: radio
    choices:
      - Myself: self
      - Someone else: someone_else
  - How are you related to the person who got too much money?: relationship_to_user
    datatype: checkboxes
    choices:
      - Parent: parent
      - Representative payee: rep_payee
      - Spouse: spouse
      - Legal guardian: legal_guardian
      - Other: other
    show if:
      variable: filing_for
      is: someone_else      
---
depends on:
  - filing_for
code: |
  client_is_overpaid_person = filing_for == "self"
---
id: will_receive_inheritance
question: |
  Do you expect to receive an inheritance in the next 6 months?
fields:
  - no label: will_receive_inheritance
    datatype: yesnoradio
  - Please explain: will_receive_inheritance_explanation
    datatype: area
    show if: will_receive_inheritance
---
code: |
  # Keep in own code block so it's only evaluated once
  started_on_phone = device() and device().is_mobile
---
code: |
  # The phone/email method will only work if
  # we enforce logins
  if started_on_phone:
    saw_signature_choice = True # Don't ask how they want to sign
    client.signature
  else: 
    saw_signature_choice
    if defined('signature_choice') and signature_choice =='this device':
      client.signature
    elif defined('signature_choice') and signature_choice == 'phone':
      saw_signature_qrcode
      if defined('link_cell') or defined('link_email'):
        if defined('link_cell') and link_cell and task_not_yet_performed('send signature link'):
          send_sms(task='send signature link', to=link_cell,template=interview_link)
        if defined('link_email') and link_email:
          send_email(task='send signature link', to=link_email, template=interview_link)
        signature_wait_screen
        client.signature
        if device() and device().is_mobile:
          signature_phone_followup
      else:
        client.signature
    # Handle situation where someone uses the QR code    
    if saw_signature_choice and not defined('signature_choice'):
      client.signature
      signature_phone_followup
      signature_choice = 'phone'
  run_signature_flow = True  
---
id: signature wait screen
question: |
  % if defined('client.signature'):
  Thank you for signing
  % else:
  Add your signature
  % endif
subquestion: |
  % if defined('client.signature'):
  Click continue.
  % else:
  % if device() and device().is_mobile:
  Click continue on this screen when you're ready to sign.
  % else:
  Click continue to sign on this device. Wait here if you
  sent a link to sign to someone else. Click continue
  when your signature has been added.
  % endif
  % endif

field: signature_wait_screen
decoration: file-signature
---
id: signature phone followup
question: |
  Continue on the device you started the interview on
subquestion: |
  Thank you for signing. You can close this browser on your phone.
  Keep going on the computer you started the interview on.
field: signature_phone_followup  
---
id: signature-phone
question: |
  Sign your forms
fields:
  - note: |
      1. Open the camera app or barcode reader app on your phone.
      2. Point it at the screen.
      3. Click the link icon that appears on the camera screen.
      4. Click ${word("continue")} on your phone.
      
      <center>
      ${interview_url_as_qr()}
      </center>

    show if: 
      code: |
        device() and device().is_pc
  - Email a link instead: email_link
    datatype: yesnowide
    show if: 
      code: |
        device() and device().is_pc
  - Email address: link_email
    show if: email_link
  - Text a link instead: text_link
    datatype: yesnowide
    show if: 
      code: |
        device() and device().is_pc
  - label: Cell phone number
    field: link_cell
    show if: text_link
    default: ${showifdef('client.phone_number')}
  - note: |
      Click ${word("continue")} to add your signature.
  - note: |
      Click ${word("continue")} to add your signature.
    show if: 
      code: |
        device() and not device().is_pc
help: |
  Many smartphones will automatically find the link on this screen when you use
  the camera app. The link
  may "float" up from the screen into a small icon you can click.
  If your phone does not do this, use the text option instead.
continue button field: saw_signature_qrcode
---
code: |
  has_sellable_assets = vehicles.there_are_any or real_estate.there_are_any
---
code: |
  if recordee.name.full() == client.name.full() and payment_type['SSI']:
    we_think_recordee_is_client = True
    receives_benefits = True
    receives_benefits_type_options = 'SSI'
    receives_benefits_type = 'SSI'
    receives_ssi = True
    received_ssi = False
  else:
    we_think_recordee_is_client = False
  evaluate_if_receives_benefits = True
---
id: intro
question: |
  Social Security Overpayment Waiver or Change
subquestion: |
  This website can help you ask the Social Security administration to 
  
  1. **lower the amount that must be paid back**, or;
  1. **change the schedule of payments** for someone who is told that they
  owe the Social Security Administration money.
  
  ${ collapse_template(overpayment_waiver_help_template) }

  #### Before you get started

  Use this website if you agree that you owe the Social Security
  Administration. If you do not agree, you should file an 
  [appeal](https://secure.ssa.gov/iApplNMD/start) instead.
  
  ${ collapse_template(appeal_help_template) }
  
  Before you start, you should find:
  
  1. The notice from Social Security that says that you owe money.
  1. Information about the money that you get each month, and the money that
  people who live with you get.
  1. Find out if you get SSI, SSDI, or both.
  1. Information about how you save and spend money, such as bank statements
  and bills.
  
  This form will also ask for your Social Security number. We keep your
  information safe. Click below to learn more.
fields: 
  - Before you start you must accept the [terms of use](https://vlpnet.org/tos-for-guided-interviews/): intro_screen
    datatype: checkboxes
    minlength: 1
    validation messages:
      minlength: |
        You must accept the terms of use to continue.
    choices:
      - I accept the terms of use: i_accept
under: |
  _This website is not giving you legal advice. If you need legal advice, consult a lawyer._
help:
  label: |
    How do you keep my information safe?
  content: |    
    All information sent to and from this server is encrypted, using the same
    technology and strength that keeps your bank information safe.
    
    If you create an account on our system, your responses
    will be encrypted on our server at all times.
    Only someone with your password will be able to view the contents of your
    interview. 
    
    It's important to both keep your password
    secure and not to lose it, because we will not be able
    to retrieve your interview without it.
---
template: overpayment_waiver_help_template
subject: |
  More information about an overpayment waiver
content: |
  When Social Security says that you have an overpayment they are saying that you got more SSI or SSDI than you should have gotten under their rules. The reason Social Security says you have an overpayment is in the Notice of Overpayment. 
  
  If you agree with Social Security that you have an overpayment but you believe it wasn’t your fault and you can’t afford to pay it back you can ask Social Security for a Waiver. A Waiver means that you don’t have to pay back the overpayment. This interview is to help you fill out a form to ask for a Waiver of the overpayment.
---
template: appeal_help_template
subject: |
  More information about appeals
content: |
  If you do NOT agree with Social Security that you have an overpayment or if you do not understand the reasons Social Security said you have an overpayment, you can file an appeal of the overpayment. The appeal is called a Request for Reconsideration.  
  
  The deadline for filing the appeal is 60 days from the date you got your overpayment notice from Social Security. You must act quickly if you want to appeal. 
  
  If you got an overpayment notice after going back to work while you were on SSI or SSDI, you may be able to get legal advice from the Disability Law Center. Call them at ${tel("617-723-8455") } or ${ tel("1-800-872-9992") }. They may be able to help you decide if you should file an appeal or a waiver. 
  
  You can [start your appeal online](https://secure.ssa.gov/iApplNMD/start) or by filling out the [Request for Reconsideration form](https://www.ssa.gov/forms/ssa-561-u2.pdf) and sending it to your [local Social Security office](https://www.ssa.gov/open/data/FO-RS-Address-Open-Close-Time-App-Devs.html).

  Learn more:
  
  * [https://www.illinoislegalaid.org/legal-information/ssi-and-ssdi-overpayments-and-appeals](https://www.illinoislegalaid.org/legal-information/ssi-and-ssdi-overpayments-and-appeals)
  * [https://www.masslegalservices.org/content/ssi-overpayment-booklet](https://www.masslegalservices.org/content/ssi-overpayment-booklet)
  * [https://www.masslegalservices.org/content/ssdi-overpayment-booklet](https://www.masslegalservices.org/content/ssdi-overpayment-booklet)

---
id: who is overpaid
question: |
  Who got too much money from Social Security?
subquestion:
  Whose account is the overpayment on?
  Look at the letter about the overpayment that you got from Social Security.
  Look for a Social Security or Claim Number on the letter. Write down the name 
  of the person who has that
  Social Security number.
fields:
  - no label: recordee
    datatype: object_radio
    disable others: True
    default: client
    object labeler: |
      lambda y: "Me (" + str(y) + ")"
    none of the above: |
      Someone else
    choices: |
      who_overpaid_options
  - First name: recordee.name.first
  - Middle name: recordee.name.middle
    required: False
  - Last name: recordee.name.last
  #- Social Security Number: recordee.ssn
  #  datatype: ssn
  #  validate: is_valid_ssn
  #- Claim number: recordee.claim_number
  #  required: False
---
id: representation to overpaid
question: |
  What is your relationship to ${recordee}?
subquestion:
  You are ${recordee.possessive("___")}
fields:
  - no label: relationship_to_overpaid
    #input type: checkboxes
    choices:
      - parent
      - spouse
      - representative payee
      - legal guardian
      - other
  - Other: other_relationship
    input type: area
    js show if: |
      val("relationship_to_overpaid") === "other"
---
code: |
  if recordee == client:
    client_is_rep_payee = False
---
code: |
  if not isinstance(expenses, DAEmpty): 
    expenses_exceed_income = expenses.total() > (client.incomes.total() + spouse.incomes.total() + household.incomes.total())
  else:
    expenses_exceed_income = False  
---
id: agree overpaid
question: |
  Do you agree that ${recordee} got too much money from Social Security?
subquestion: |
  Choose the answer that best matches what you understand about what happened.
  If you agree that ${recordee} was overpaid, you are _not_ agreeing that you
  need to pay the Social Security Administration back.
field: agree_overpaid
choices:
  - I disagree that ${recordee} got too much money. I think ${recordee} was paid the right amount: False
  - I agree ${recordee} was paid too much, even if it was an accident.: True
---
id: objective
question: |
  What are you asking the Social Security Administration to do?
fields:
  - no label: client_goals
    # required: False
    datatype: checkboxes
    choices:
      - "**Reduce** the amount I pay back each month.": change_payment
      - "**Reduce** or **waive** the total amount I need to pay.": waiver_payment
    none of the above: |
      I don't know
---
code: |
  only_change_monthly_due = len(client_goals.true_values()) == 1 and client_goals["change_payment"]
---
comment: |
  Not sure we will leave this in--somewhat in the nature
  of debugging for now. But could be useful for transparency.
id: explain ssa 634
question: |
  We'll complete form SSA-634 for you
subquestion: |
  You said you only are asking the Social Security Administration
  to change the amount you pay each month. That means we only need
  to complete form SSA-634.
  
  Form SSA-634 is a little simpler and asks fewer questions.
  
  Below is what the first page of form SSA-634 looks like. 
  
  ${ SSA_634.show(width='28em') }
    
continue button field: explain_ssa_634  
---
id: explain ssa 632
question: |
  We'll complete form SSA-632 for you
subquestion: |
  % if not len(client_goals.true_values()):
  You said you aren't sure yet what you want the Social Security Administration
  to do. That means we'll need to complete form SSA-632.
  % else:
  You said you would like the Social Security Administration to change the
  total amount you will pay back. That means we'll complete form SSA-632.
  % endif
  
  Below is what the first page of form SSA-632 looks like.
  
  ${ SSA_632.show(width='28em') }
continue button field: explain_ssa_632
---
objects:
  - SSA_634: DAStaticFile.using(filename='SSA_634.png', alt_text='SSA-634')
  - SSA_632: DAStaticFile.using(filename='SSA_632.png', alt_text='SSA-632')
---
id: exit dont agree overpaid
decoration: hand-paper
question: |
  This may not be the right form for you.
subquestion: |
  This form is used when you want the Social Security Administration to waive or reduce the amount you owe them.
  
  If you don't agree with the Social Security Administration that an overpayment happened, you may want to appeal the overpayment instead. It's a good idea to talk to a lawyer. For help finding legal aid, visit the [Legal Services Corporation](https://www.lsc.gov/what-legal-aid/find-legal-aid).
  
  If you received the letter from the Social Security Administration notifying you of the overpayment more than 65 days ago, it is too late for you to file an appeal. If it is too late for you to file an appeal and you don’t agree that an overpayment happened, you should still proceed by selecting "Keep going" to request the Social Security Administration waive or reduce the amount you owe them.
buttons:
  - Keep going:
      code: |
        continue_anyway = True  
  - Restart: restart
  - Exit: exit
---
id: is rep payee
question: |
  Are you ${recordee}'s representative payee?
subquestion: |
  You said the overpayment was on ${recordee}'s account.
  At the time the Social Security Admininistration says you 
  were overpaid, were you a  
  representative payee for ${recordee}?
yesno: client_is_rep_payee
---
id: overpayment info
question: |
  Tell us about ${recordee}'s overpayment
fields:
  - Did you live with ${recordee} when the overpayment happened?: someone_else_lived_with_user
    datatype: yesnoradio
  - Did you receive any of the overpaid money?:   someone_else_user_received_benefits
    datatype: yesnoradio
---
id: how benefits used
question: |
  What did you spend the overpaid benefits on?
fields:
  - no label: overpayment_benefits_used_for
    datatype: area
    maxlength: 86
---
id: beneficiary info
question: |
  Who is the beneficiary?
subquestion: |
  Sometimes the person who uses the benefits is different than the person
  who earned them. For example, a spouse or dependent may get the benefits
  earned by someone who worked who retired or became disabled.
  If ${recordee} both earned and uses the benefits, just select their name here.
fields:
  - Somebody already mentioned: beneficiary
    datatype: object_radio
    default: client
    disable others: True
    choices: |
      everyone
    none of the above: Someone else      
    object labeler: |
      lambda y: str(y) if y != client else 'Me (' + str(y) + ')'
  - First name: beneficiary.name.first
  - Last name: beneficiary.name.last
  - Address: beneficiary.address.address
    address autocomplete: True
  - Unit or Apt: beneficiary.address.unit
    required: False
  - City: beneficiary.address.city
  - State: beneficiary.address.state
    code: |
      states_list()
  - Zip code: beneficiary.address.zip
    required: False
  - County: beneficiary.address.county
    required: False      
---
id: additional users
question: |
  Is anyone else using this form with you?
subquestion: |
  If the Social Security Administration says that more than one person has to
  pay them back, they can use this form with you.
  
  If you think you and the other person may disagree about whose fault the
  overpayment was, it may be safest for you each to use your own forms.
  
  Do you want to list someone else on this form with you who will also be asking the
  Social Security Administration to waive the overpayment?
yesno: overpaid_persons.there_are_any
---
id: additional user info
question: |
  Who is the ${ordinal(i)} person who will use the form with you?
fields:
  - Somebody already mentioned: overpaid_persons[i]
    datatype: object
    disable others: True
    choices: |
      everyone_but_me
  - First name: overpaid_persons[i].name.first
  - Middle name: overpaid_persons[i].name.middle
    required: False
  - Last name: overpaid_persons[i].name.last
  - Social Security Number: overpaid_persons[i].ssn
    validate: is_valid_ssn
    datatype: ssn

---
id: social security number
generic object: Individual
question: |
  Social Security Number for ${x}
subquestion: |
  What is ${x}'s Social Security Number?
fields:
  - SSN: x.ssn
    validate: is_valid_ssn
    datatype: ssn  
under: |
  {Why} do we need this?
terms:
  - Why: |
      The Social Security Administration needs this number in order to 
      apply this overpayment waiver request to the right account.
---
id: claim number
generic object: Individual
question: |
  Claim number
subquestion: |
  If ${x} has a claim number that is different from their Social Security
  number, enter it below.
fields:
  - Claim number: x.claim_number
    required: False
---
id: review overpaid persons 
question: |
  Overpaid Persons
subquestion: |
  So far you have told us about ${overpaid_persons.number()} people who will
  be listed on this form with you. You can add another person, or click
  continue to go to the next question.
  ${ overpaid_persons.table }
  ${overpaid_persons.add_action()}
field: review_overpaid_persons
---
table: overpaid_persons.table
rows: overpaid_persons
columns:
  - Name: |
      row_item
  - Social Security Number: |
      row_item.ssn
edit:
  - row_item.name.first
  - row_item.ssn
---
id: overpaid person info
question: |
  Who is the ${ordinal(i)} overpaid person?  
fields:
  - Social Security Number: overpaid_persons[i].ssn
    validate: is_valid_ssn
    datatype: ssn
---
id: have overpaid money
question: |
  Do you currently have any of the money you were overpaid? 
fields:
  - no label: possess_overpayment
    datatype: yesnoradio
  - How much do you still have?: possess_overpayment_amount
    show if: possess_overpayment
    datatype: currency
    min: 1
    step: 1
---
id: pay ssa explanation
question: |
  You will need to pay the Social Security Administration back
subquestion: |
  The Social Security administration will ask you to pay back the ${currency(possess_overpayment_amount, decimals=False)}
  that you said you still have from the overpayment. If that is less than the full 
  amount of the overpayment you may still need to pay back more, but you can ask for a 
  payment plan that works for you.
field: pay_ssa_explanation
---
id: had overpaid money
question: |
  What happened to the overpaid checks or money?
subquestion: |
  You said you no longer have any of the money you were overpaid.
fields: 
  - When you got the overpayment notice, did you have any of the money you were overpaid?: possessed_overpayment_at_notice
    datatype: yesnoradio
  - How much did you have then?: possessed_overpayment_at_notice_amount
    datatype: currency
    step: 1
    show if: possessed_overpayment_at_notice
    
---
id: receives benefits
question: |
  Are you currently receiving any needs-based cash benefits?
subquestion: |
  Answer yes if you personally receive cash welfare benefits, SSI, or a state cash 
  benefit that is based on your need.
yesno: receives_benefits  
help: |
  If you are receiving SSI or another benefit based on your need, you do not need
  to give the Social Security Administration as much information about your finances.
---
id: benefits kind
question: |
  What kind of cash benefits are you receiving?
fields: 
  - no label: receives_benefits_type_options
    datatype: checkboxes
    choices:
      - SSI: SSI
      - EAEDC: EAEDC
      - TAFDC (Temporary Aid to Families with Dependent Children): TAFDC
      - Other: other
  - Name of benefits program: receives_benefits_other
    show if: receives_benefits_type_options['other']
  - What is the account or claim number for your benefits?: receives_benefits_claim_number
    show if: receives_benefits_type_options['other']

---
code: |
  if receives_benefits_type_options['SSI'] or receives_benefits_type_options['TAFDC'] or receives_benefits_type_options['EAEDC']:
    receives_benefits_type = receives_benefits_type_options.true_values()
  else:
    receives_benefits_type = receives_benefits_other
---
id: dont need financial statement explanation
question: |
  You don't need to give us your financial information
subquestion: |
  Because you are receiving ${receives_benefits_type}, you don't need to answer the
  financial questions on this form. We'll finish asking for your contact information
  and signature on the next few pages.
field: dont_need_financials_explanation
---
id: do need financial statement explanation
question: |
  We will need to collect your financial information
subquestion: |
  In the next section, we will need to ask detailed information about how you,
  your spouse, and any household members earn money, as well as your household
  expenses. You will need to list any money you or a household member earns from 
  any source, including things like odd jobs, interest on bank accounts, and informal 
  payments for household expenses.
  
  Take a minute to make sure you have any pay stubs, tax returns or receipts for
  self-employment income, bank statements, and any monthly bills you pay.
  
  % if user_logged_in():
  If you don't have information about all your expenses or if you need a break, your work has been saved and you can come back later to finish the interview.
  % else:
  If you don't have information about all your expenses or if you need a break, you can save your work and come back later to finish the interview by creating an account.
  
  ${ action_button_html(url_of('register'), label="Create an account") }
  
  % endif
field: need_financials_explanation  
---
id: cash on hand
question: |
  Cash on hand
fields:
  - How much money do you, your spouse, or anybody who depends on you have available as cash on hand?: cash_amount
    datatype: currency   
---
id: ssa payment type
question: |
  What kind of Social Security payments does ${recordee} receive?
fields:
  - no label: payment_type
    datatype: checkboxes
    choices:
      - Supplemental Security Income (SSI): SSI
      - Social Security Disability (SSDI): other
      - Retirement benefits: other
    none of the above: |
      ${recordee} no longer receives any money from Social Security
---
id: actions after overpayment notice
question: |
  What happened after you got the overpayment notice from Social Security?
subquestion: |
  Think about what happened after Social Security told you that ${recordee} got
  too much money.
fields:  
  - Did you lend or give away any property or cash after the notice of overpayment?: gave_cash_after_notice
    datatype: yesnoradio
  - Describe who got the property or cash, what it was and its value: gave_cash_after_notice_explanation
    datatype: area
    maxlength: 170
    show if: gave_cash_after_notice
  - Did you get or sell any property or get any cash, (other than money you got from working), after the notice of overpayment?: received_cash_after_notice
    datatype: yesnoradio
  - Describe the property and sale price, or amount of cash received: received_cash_after_notice_explanation
    datatype: area
    maxlength: 170
    show if: received_cash_after_notice
---
id: why cant return overpayment
question: |
  Why can't you return the overpayment any more?
subquestion: |
  You said that when you got the notice, you still had 
  ${ currency(possessed_overpayment_at_notice_amount, decimals=False) } from the overpayment.
  Using your own words, explain to the Social Security Administration 
  why you do not think you should have to return the ${ currency(possessed_overpayment_at_notice_amount, decimals=False) }
  anymore.
fields:
  - no label: cant_return_explanation
    datatype: area
    maxlength: 273
---
id: expenses higher than income
question: |
  Your expenses are higher than your income
subquestion: |
  From the information you gave us, your monthly expenses
  are higher than your income. Explain how you are paying your bills
  below.
fields:
  - no label: expenses_exceed_income_explanation
    datatype: area
    maxlength: 290
---
id: ability to pay
question: |
  Can you pay back the full amount?
subquestion: |
  Check any of the below that apply
fields:
  - no label: overpayment_pay_less_reasons
    datatype: checkboxes
    choices:
      - I cannot afford to pay back the money
      - The overpayment was not my fault
      - Requiring me to pay back the overpayment is unfair
    none of the above: None of the above. I can pay **everything** back      
---
code: |
  overpayment_not_my_fault = overpayment_pay_less_reasons['The overpayment was not my fault']
  overpayment_cant_afford = overpayment_pay_less_reasons['The overpayment was not my fault']
---
id: amount can pay
question: |
  How much can you afford to pay back each month?
  
fields:
  - I cannot pay anything at all: cant_pay_at_all
    datatype: yesno
  - '': affordable_amount
    datatype: currency
    hide if: cant_pay_at_all
validation code: |
  if cant_pay_at_all:
    affordable_amount = 0
---
id: ssi payment status
question: |
  SSI Payments
fields:
  - Were you receiving SSI payments in the past?: received_ssi
    datatype: yesnoradio
  - Are you receiving SSI payments right now?: receives_ssi
    datatype: yesnoradio
---
id: overpayment reason
question: |
  What is the reason for the overpayment?
subquestion: |
  Look at the letter the Social Security Administration sent you.
  What reason is the best match for why the Social Security Administration
  says you were overpaid?
fields:
  - no label: overpayment_reason
    input type: radio
    code: |
      overpayment_reason_choices
---
if: |
  payment_type['other'] and not payment_type['SSI']
variable name: overpayment_reason_choices
data:
  - out_of_country: ${recordee} went out of the country for more than 30 days
  - something_else: Something else
  - dont_know: I don't know
---
if: |
  payment_type['SSI']
variable name: overpayment_reason_choices
data:
  - money_in_bank: ${recordee} had too much money in a bank account
  - worked_many_hours: ${recordee} went back to work and made too much money
  - out_of_country: ${recordee} went out of the country for more than 30 days
  - something_else: Something else
  - dont_know: I don't know
---
id: overpayment explanation
question: |
  Why did the overpayment happen?
fields:
  - Explain how the overpayment happened.: overpayment_explanation
    datatype: area
    maxlength: 435
---
depends on:
  - overpayment_reason
code: |
  overpayment_reason_plain_text = next(filter(lambda reason: next(iter(reason),'') == overpayment_reason, overpayment_reason_choices),{}).get(overpayment_reason)
---
id: overpayment fault
question: |
  Why was the overpayment not your fault?
subquestion: |
  % if overpayment_reason == 'dont_know' or overpayment_reason == 'something_else':
  Explain why the overpayment wasn't your fault.
  Answer "I don't know" if that is the best answer.
  You can type a total of 460 characters in the spaces provided.
  % else:
  You said that the Social Security Administration believes the overpayment happened because ${overpayment_reason_plain_text}.
  Explain why the overpayment wasn't your fault. 
  Answer "I don't know" if that is the best answer.
  You can type a total of 460 characters in the spaces provided.
  % endif
fields:
  - Why was the overpayment not your fault?: overpayment_why_not_at_fault
    datatype: area
  - Why is it not your fault that you accepted the overpayment?: overpayment_why_accepted
    datatype: area
  - Why did you think you had a right to the money?: overpayment_why_had_right
    datatype: area
validation code: |
  if len(overpayment_why_not_at_fault) + len(overpayment_why_accepted) + len(overpayment_why_had_right) > 460: validation_error("It's too long.")
---
id: ssa contact
question: |
  Contact with Social Security Administration
subquestion: |
  % if overpayment_reason == 'dont_know' or overpayment_reason == 'something_else':

  % else:
  You said that the reason for the overpayment was that ${overpayment_reason_plain_text}.
  % endif
fields:
  - label: |
      % if overpayment_reason == 'dont_know' or overpayment_reason == 'something_else':
      Did you tell the Social Security Administration about the change or event that made you overpaid?
      % else:
      Did you tell the Social Security Administration that ${overpayment_reason_plain_text}?
      % endif
    field: informed_ssa
    datatype: yesnoradio
  - Why not?: did_not_inform_ssa_explanation
    datatype: area
    maxlength: 285
    show if:
      variable: informed_ssa
      is: False
  - label: |
      % if overpayment_reason == 'dont_know' or overpayment_reason == 'something_else':
      Did you talk to someone (by phone or in person) about the change or event that made you overpaid?
      % else:
      Did you talk to someone (by phone or in person) about the fact that ${overpayment_reason_plain_text}?
      % endif
    field: informed_orally
    datatype: yesnoradio
    show if: informed_ssa
  - Who did you talk to?: who_spokewith
    maxlength: 44
    show if: informed_orally
  - What did you say?: informed_what_said 
    datatype: area
    maxlength: 300
    show if: informed_orally
---
id: ssa contact how
question: |
  How did you talk to the Social Security Administration?
subquestion: |
  You said that you told Social Security about the overpayment, but it wasn't by phone or in person.
fields:
  - Explain how, when and where you told the Social Security Administration that you were being overpaid.: how_when_where
    datatype: area
    maxlength: 344
---
id: ssa contact followup
question: |
  Follow-up
subquestion: |
  % if overpayment_reason == 'dont_know' or overpayment_reason == 'something_else':
  You said that you contacted the Social Security Administration to let them know that you were overpaid.
  % else:
  You said that you contacted the Social Security Administration to let them know that ${overpayment_reason_plain_text}.
  % endif
fields:
  - label: |
      % if overpayment_reason == 'dont_know' or overpayment_reason == 'something_else':
      After you reported the overpayment, did the Social Security Administration change your benefits amount?
      % else:
      After you reported that ${overpayment_reason_plain_text}, did the Social Security Administration change your benefits amount?
      % endif
    field: benefits_changed_after_contact
    datatype: yesnoradio
  - Did you try to let the Social Security Administration know about the overpayment more than once?: benefits_did_not_change_followed_up
    datatype: yesnoradio
    show if:  
      variable: benefits_changed_after_contact
      is: False
---
id: past overpayments
question: |
  Past overpayments
fields:
  - Is this the first time you have been overpaid?: first_overpayment
    datatype: yesnoradio
  - What Social Security Number were you overpaid on before?: past_overpayment_ssn
    validate: is_valid_ssn
    datatype: ssn
    show if:
      variable: first_overpayment
      is: False
  - Why were you overpaid in the past?: past_overpayment_explanation
    datatype: area
    maxlength: 125
    show if:
      variable: first_overpayment
      is: False
  - If the reason is similar to the reason you were overpaid this time, explain what you did to prevent it happening again.: past_overpayment_similar_explanation
    datatype: area
    maxlength: 125
    show if:
      variable: first_overpayment
      is: False 
---
id: expected financial changes
comment: |
  Financial expectation and funds availability
question: |
  Changes to your financial situation
subquestion: |
  Please think about your financial situation and any changes, whether
  for the better or worse, that you expect in the next 6 months.
fields:
  - In the next 6 months, I expect I or a household member: expect_change
    datatype: checkboxes
    choices:
      - Will receive a large tax refund
      - Will have a large bill repaid to me
      - Will receive a pay raise
      - Will receive a pay cut
      - Will pay a major bill (such as house repairs): Will pay a major bill
      - Other financial change for the better
      - Other financial change for the worse
  - Explain: expect_change_explanation
    datatype: area
    maxlength: 174
    js show if: |
      val("expect_change['Will receive a large tax refund']") || val("expect_change['Will receive a pay raise']") || val("expect_change['Will have a large bill repaid to me']") || val("expect_change['Will receive a pay raise']") || val("expect_change['Will receive a pay cut']") || val("expect_change['Will pay a major bill']") || val("expect_change['Other financial change for the better']") || val("expect_change['Other financial change for the worse']")
---
code: |
  if assets.there_are_any:
    cash_assets = [asset for asset in assets if asset.type in ['savings','checking']]
    #cash_assets = []
    non_cash_assets = [asset for asset in assets.elements if asset.type not in ['savings','checking']]
  else:
    cash_assets = []
    non_cash_assets = []
  fixed_assets = vehicles.elements + real_estate.elements
---
id: funds being saved
question: |
  Are any funds being saved for a special purpose?
subquestion: |
  You said that you or a household member have the following
  accounts that have cash on hand.
  
  Check any funds that are being saved for a special purpose.
fields:
  - no label: accounts_special_purpose
    datatype: object_checkboxes
    choices: cash_assets
    object labeler: |
      lambda y: y.type + ':' +' '  + currency(y.balance, decimals=False)
  - Explain what the special purpose is: accounts_special_purpose_explanation
    datatype: area        
    required: False
    maxlength: 174
---
id: convertable noncash assets
question: |
  Are there any assets with a balance or value that CANNOT be converted to cash?
subquestion: |
  You said that you or a household member have the following assets
  that have a "balance or value".

  Check any assets below that CANNOT be converted to cash.
fields:
  - no label: assets_cannot_be_converted
    datatype: object_checkboxes
    choices: non_cash_assets
    object labeler: |
      lambda y: y.type + ':' + ' ' + currency(y.balance, decimals=False)
  - Explain why the assets CANNOT be converted to cash: assets_cannot_be_converted_explanation
    datatype: area
    required: False
    maxlength: 174
---
id: convertable cash assets
question: |
  Are there any assets that do not have a balance or value that CANNOT be sold or
  otherwise converted to cash?
subquestion: |
  You said that you or a household member have the following
  vehicles and real estate, other than the family car or house.

  Check any assets below that CANNOT be sold or otherwise converted
  to cash.
fields:
  - no label: assets_cannot_be_sold
    datatype: object_checkboxes
    choices: fixed_assets
    object labeler: |
      lambda y: (y.year_make_model()) if hasattr(y,'make') else y.description
  - Explain why the vehicle or property CANNOT be sold: assets_cannot_be_sold_explanation
    datatype: area
    required: False
    maxlength: 174
---
id: contact information
generic object: Individual
question: |
  ${x}'s Contact Information
fields:
  - Home or cell phone number: x.phone_number
  - Work phone number: x.phone_work
    required: False
  - Address: x.address.address
    address autocomplete: True
  - Unit or Apt: x.address.unit
    required: False
  - City: x.address.city
  - State: x.address.state
    code: |
      states_list()
  - Zip code: x.address.zip
    required: False
---
id: which office
question: |
  What Social Security office do you want to send the letter to?
subquestion: |
  % if found_offices:
  We have found the following offices that are close to your address.
  
  ${map_of([office for office in officelist])}
  % else:
  You can use the [Office locator](https://secure.ssa.gov/ICON/main.jsp) to find
  a Social Security Office near you.
  % endif
fields:
  - Social Security Office: ssa_office
    datatype: object_radio
    # input type: radio
    choices: officelist
    none of the above: True
    disable others: True
    object labeler: |
      lambda y: (y.address.on_one_line())
  - note: |
      Choose an office above, or use the [Office locator](https://secure.ssa.gov/ICON/main.jsp)
    show if: found_offices
  - Office name: ssa_office.name.text
  - Address: ssa_office.address.address
  - Suite: ssa_office.address.unit
    required: False
  - City: ssa_office.address.city
  - State: ssa_office.address.state
    code: |
      states_list()
---
code: |
  officelist.load_offices(client.address)
  officelist.gathered = True
---
code: |
  found_offices = officelist.number() > 0
---
id: signature method
decoration: file-signature
question: |
  Sign your forms
subquestion: |
  We are almost ready to print your forms. You will need to sign them before
  delivering them. We recommend you sign electronically now, before you print. 
  You can sign using your computer mouse, or sign on your phone with your finger.
field: signature_choice
buttons:  
  - Sign on a mobile phone: phone
    image: mobile-alt
  - Sign on this computer: this device
    image: desktop
  - Sign after I print: paper
    image: print
script: |
  <script>
    $(document).on('daPageLoad', function(){
      $(".da-field-buttons > div > .btn-da-custom").last().after("<br>")
      $(".da-field-buttons > div > .btn-da-custom").first().before("<br>")
    });
  </script>
continue button field: saw_signature_choice  
---
id: sign on phone
question: Sign on your phone
subquestion: |
  % if device().is_pc:
  Click continue on this screen once you have finished signing on your phone.
  % else:
  Click continue on this screen when you're ready to sign.
  % endif
  
field: signature_wait_screen  
---
template: interview_link
content: |
  You are being asked to sign a Request for SSI Overpayment Waiver form.
  Click the link below to add your signature on your phone.
  
  ${interview_url()}
---
id: signature
question: Sign below
subquestion: |
signature: client.signature
under: |
  ${ client }
---
code: |
  client_support = client.incomes.total(type='other') > 0 if not isinstance(client.incomes, DAEmpty) else []
  spouse_support = spouse.incomes.total(type='other') > 0 if not isinstance(spouse.incomes, DAEmpty) else []
  household_support = household.incomes.total(type='other') > 0 if not isinstance(household.incomes, DAEmpty) else []
    
  receives_support = client_support or spouse_support or household_support
  all_incomes = client.incomes + spouse.incomes + household.incomes
  
  if receives_support:
    support_sources = [income.name for income in all_incomes if income.type == 'other support']
  else:
    support_sources = []
    
---
code: |
  client_pensions = client.incomes.matches('pension')
  spouse_pensions = spouse.incomes.matches('pension')
  household_pensions = household.incomes.matches('pension')
---
code: |
  savings = assets.matches('savings')
---
code: |
  grand_total = (client.incomes.total(period_to_use=12) +
                  spouse.incomes.total(period_to_use=12) + 
                  household.incomes.total(period_to_use=12) +
                  client.jobs.net_total(period_to_use=12) +
                  spouse.jobs.net_total(period_to_use=12) +
                  household.jobs.net_total(period_to_use=12) +
                  assets.total(period_to_use=12) 
                  )

  monthly_expenses = expenses.total()

  adjusted_expenses = monthly_expenses + 25 # See Question 20C
---
code: |
  if len(cash_assets) > 0:
    cash_kept_special_purpose = len(accounts_special_purpose) > 0
    cash_special_purpose_no_money_on_hand = False
  else:
    cash_kept_special_purpose = False
    cash_special_purpose_no_money_on_hand = True
---
code: |
  room_and_board_explanation = comma_and_list([item.room_and_board_explanation for item in all_incomes if item.type == "room and board"])     
---
code: |
  asset_other_description = comma_and_list([item.other_type for item in assets if item.type == "other"])
---
code: |
  expense_support_details = comma_and_list([item.support_explanation for item in expenses if item.type == "support"])
---
id: preview pdf
continue button field: preview_pdf
question: |
  Review your form before you sign it
subquestion: |
  Here is a preview of the form you'll sign on the next page. 
  
  ${ ssa_634_template['preview'] if only_change_monthly_due else ssa_632_template['preview'] }
   
  Remember to come back to this window to continue and sign your form.
---
id: download pdf
event: download_pdf
question: |
  Your document is ready
subquestion: |
  1. Download and print 2 copies of the "Request For Waiver Of Overpayment Recovery Or Change In Repayment Rate" document below.
  1. Keep one copy for your own records.
  2. Deliver one copy to your local Social Security Administration
  office.
attachment code: |
  ssa_634_template['final'] if only_change_monthly_due else ssa_632_template['final']
allow emailing: False
buttons:
  - Exit: exit
    url: https://www.ssa.gov/ssi/text-overpay-ussi.htm
  - Restart: restart
---
objects:
  - ssa_632_template: DADict
---
need: 
  - grand_total
  - cash_kept_special_purpose
  - has_sellable_assets
attachment:
  - name: SSA-632 Request For Waiver Of Overpayment Recovery Or Change In Repayment Rate
    filename: SSA-632
    skip undefined: True
    variable name: ssa_632_template[i]
    pdf template file: ssa-632.pdf
    # checkbox export value: "On"
    editable: False
    # TODO - finish below
    fields:
      - "record_owner": ${ recordee }
      - "record_claim_number": ${ recordee.claim_number }
      - "record_ssn": ${ recordee.ssn }
      - "client_is_overpaid_person_yes": ${ client_is_overpaid_person }
      - "client_is_overpaid_no": ${ not client_is_overpaid_person }
      - "client_relationship_parent": ${ relationship_to_user['parent'] }
      - "client_relationship_rep_payee": ${ relationship_to_user['rep_payee'] }
      - "client_relationship_spouse": ${ relationship_to_user['spouse'] }
      - "client_relationship_legal_guardian": ${ relationship_to_user['legal_guardian'] }
      - "client_relationship_other": ${ relationship_to_user['other'] }
      - "client_name": something
      - "rep_received_benefits_yes": No
      - "rep_received_benefits_no": No
      - "someone_else_lived_with_user_yes": something
      - "someone_else_lived_with_user_no": something
      - "client_lives_with_overpaid_person_yes": No
      - "client_lives_with_overpaid_person_no": No
      - "waiver_for_minor_child_yes": No
      - "waiver_for_minor_child_no": No
      - "told_ssa_no": No
      - "told_ssa_yes": No
      - "possess_money_yes": No
      - "possess_money_no": No
      - "possess_money_amount": something
      - "money_used_for_beneficiary_yes": No
      - "money_used_for_beneficiary_no": No
      - "benefits_used_for": something
      - "ssa_told_client_must_pay_for_someone_else_yes": something
      - "client_received_overpaid_money_yes": No
      - "client_received_overpaid_money_no": No
      - "situation_client_minor_when_received": No
      - "situation_client_adult_when_received": No
      - "situation_client_getting_disability_benefits_when_overpaid": No
      - "situation_client_getting_retirement_benefits_when_overpaid": No
      - "situation_client_getting_parent_benefits_when_overpaid": No
      - "situation_client_getting_widow_benefits_when_overpaid": No
      - "situation_client_getting_spousal_benefits_when_overpaid": No
      - "situation_client_getting_ssi_benefits_when_overpaid": No
      - "situation_none_of_above_explain": something
      - "situation_none_of_above": No
      - "overpayment_not_my_fault": ${yesno(overpayment_pay_less_reasons.any_true())} # TODO
      - "overpayment_cannot_afford": No
      - "overpayment_unfair": No
      - "overpayment_why_unfair": something
      - "overpayment_thought_qualified": No
      - "overpayment_still_18": No
      - "overpayment_other_reason_explain": something
      - "overpayment_other_reason": No
      - "overpayment_waive_everything_yes": No
      - "overpayment_waive_everything_no": No
      - "overpayment_waiver_second_request_no": No
      - "overpayment_waiver_second_request_yes": No
      - "client_has_overpayment_notice_yes": No
      - "client_has_overpayment_notice_no": No
      - "overpayment_notice_date": something
      - "overpayment_notice_first_overpayment": something
      - "overpayment_notice_last_overpayment": something
      - "overpayment_notice_exact_month": something
      - "overpayment_reason_income_too_high": No
      - "overpayment_reason_household_income_too_high": No
      - "overpayment_reason_savings_too_high": No
      - "overpayment_reason_got_help": No
      - "overpayment_reason_double_benefits": No
      - "overpayment_reason_not_disabled": No
      - "overpayment_reason_marital_status": No
      - "overpayment_reason_workers_comp": No
      - "overpayment_reason_nursing_home": No
      - "overpayment_reason_jail": No
      - "overpayment_reason_outside_us": No
      - "overpayment_reason_immigration_status": No
      - "overpayment_reason_another_entitlee": No
      - "overpayment_reason_attorney_fee_not_withheld": No
      - "overpayment_reason_student_status": No
      - "overpayment_reason_dependent_child_status": No
      - "overpayment_reason_other": No
      - "overpayment_reason_other_explain": something
      - "overpayment_reason_unknown": No
      - "client_understands_reporting_rules_yes": No
      - "client_understands_reporting_rules_no": No
      - "client_understands_reporting_rules_no_explain": something
      - "client_prevented_from_reporting_other_yes": No
      - "client_prevented_from_reporting_other_no": No
      - "why_cant_report_to_ssa": something
      - "client_prevented_from_reporting_other_explain": something
      - "told_ssa_yes__1": No
      - "told_ssa_no__1": No
      - "told_ssa_phone": No
      - "told_ssa_fax_letter": No
      - "told_ssa_in_person": No
      - "told_ssa_electronic_wage_reporting": No
      - "why_didnt_tell_ssa": something
      - "told_ssa_how_other": No
      - "told_ssa_how_other_explain": something
      - "told_ssa_dates": something
      - "told_ssa_documentation_yes": No
      - "told_ssa_documentation_no": No
      - "told_ssa_documentation_explain_why_cant_send": something
      - "overpaid_before_yes": No
      - "overpaid_before_no": No
      - "overpaid_before_same_reason_yes": No
      - "overpaid_before_same_reason_no": No
      - "overpaid_before_same_reason_unknown": something
      - "receiving_ssi": ${yesno(received_ssi)}
      - "receiving_tanf": No
      - "tanf_claim_number": something
      - "receiving_va_benefits": No
      - "va_benefits_number": something
      - "possessed_money_yes": No
      - "possessed_money_no": No
      - "possessed_money_amount": something
      - "possess_money_yes__1": No
      - "possess_money_no__1": No
      - "possess_money_amount__1": something
      - "received_real_estate_yes": No
      - "received_real_estate_no": No
      - "received_real_estate_value": something
      - "gave_away_real_estate_yes": No
      - "gave_away_real_estate_no": No
      - "gave_away_real_estate_amount": something
      - "sold_yes": No
      - "sold_no": No
      - "sold_amount": something
      - "gave_away_cash_yes": No
      - "gave_away_cash_no": No
      - "Amount_3": something
      - "got_cash_yes": No
      - "got_cash_no": No
      - "got_cash_amount": something
      - "dependent_1": something
      - "dependent_1_age": something
      - "dependent_1_relationship": something
      - "dependent_2": something
      - "dependent_2_age": something
      - "dependent_2_relationship": something
      - "dependent_3": something
      - "dependent_3_age": something
      - "dependent_3_relationship": something
      - "dependent_4": something
      - "dependent_4_age": something
      - "dependent_4_relationship": something
      - "dependent_5": something
      - "dependent_5_age": something
      - "dependent_5_relationship": something
      - "non_tax_dependent_yes": No
      - "non_tax_dependent_no": No
      - "non_tax_dependent_contributes_to_expenses_yes": No
      - "non_tax_dependent_contributes_to_expenses_no": No
      - "non_tax_dependent_contributes_to_expenses_amount": something
      - "account_1_type": something
      - "account_1_name_address": something
      - "account_1_owner": something
      - "account_1_balance": something
      - "account_1_income": something
      - "account_1_number": something
      - "account_2_type": something
      - "account_2_name_address": something
      - "account_2_owner": something
      - "account_2_balance": something
      - "account_2_income": something
      - "account_2_number": something
      - "account_3_type": something
      - "account_3_name_address": something
      - "account_3_owner": something
      - "account_3_balance": something
      - "account_3_income": something
      - "account_3_number": something
      - "account_4_type": something
      - "account_4_name_address": something
      - "account_4_owner": something
      - "account_4_balance": something
      - "account_4_income": something
      - "account_4_number": something
      - "account_5_type": something
      - "account_5_name_address": something
      - "account_5_owner": something
      - "account_5_balance": something
      - "account_5_income": something
      - "account_5_number": something
      - "accounts_total_balance": something
      - "accounts_total_income": something
      - "client_owns_car_yes": No
      - "client_owns_car_no": No
      - "business_total_loan": something
      - "vehicle_owner_1": something
      - "vehicle_year_make_model_1": something
      - "vehicle_pv_1": something
      - "vehicle_loan_balance_1": something
      - "vehicle_purpose_1": something
      - "vehicle_owner_2": something
      - "vehicle_year_make_model_2": something
      - "vehicle_pv_2": something
      - "vehicle_loan_balance_2": something
      - "vehicle_purpose_2": something
      - "vehicle_owner_3": something
      - "vehicle_year_make_model_3": something
      - "vehicle_pv_3": something
      - "vehicle_loan_balance_3": something
      - "vehicle_purpose_3": something
      - "vehicle_total_value": something
      - "client_owns_real_estate_yes": No
      - "client_owns_real_estate_no": No
      - "real_property_owner_1": something
      - "real_property_description_1": something
      - "real_property_value_1": something
      - "real_property_loan_balance_1": something
      - "real_property_amount_1": something
      - "real_property_owner_2": something
      - "real_property_description_2": something
      - "real_property_value_2": something
      - "real_property_loan_balance_2": something
      - "real_property_amount_2": something
      - "real_property_description_3": something
      - "real_property_value_3": something
      - "real_property_amount_3": something
      - "real_property_total_income": something
      - "real_property_total_loan": something
      - "real_property_total_value": something
      - "client_interest_business_yes": No
      - "client_interest_business_no": No
      - "business_income_1": something
      - "business_description_1": something
      - "business_value_1": something
      - "business_loan_balance_1": something
      - "business_owner_1": something
      - "business_owner_2": something
      - "business_description_2": something
      - "business_value_2": something
      - "business_loan_balance_2": something
      - "business_income_2": something
      - "business_description_3": something
      - "business_value_3": something
      - "business_loan_balance_3": something
      - "business_income_3": something
      - "business_total_income": something
      - "business_total_value": something
      - "user_employed_yes": No
      - "user_employed_no": No
      - "user_wages_weekly": No
      - "user_wages_biweekly": No
      - "user_wages_monthly": No
      - "user_wages_bimonthly": No
      - "user_employer_name_address_phone": something
      - "user_wages_net": something
      - "spouse_employed_yes": No
      - "spouse_employed_no": No
      - "spouse_wages_weekly": No
      - "spouse_wages_biweekly": No
      - "spouse_wages_monthly": No
      - "spouse_wages_bimonthly": No
      - "spouse_employer_name_address_phone": something
      - "spouse_wages_net": something
      - "dependent_employed_yes": No
      - "dependent_employed_no": No
      - "dependent_employed_names": something
      - "dependent_wages_net": something
      - "receive_support_yes": No
      - "receive_support_no": No
      - "receive_support_loan_yes": No
      - "receive_support_loan_no": No
      - "receive_support_source": something
      - "receive_support_amount": something
      - "user_net_pay_total": something
      - "spouse_net_pay_total": something
      - "dependent_net_pay_total": something
      - "user_ss_total": something
      - "spouse_ss_total": something
      - "dependent_ss_total": something
      - "user_ssi_total": something
      - "spouse_ssi_total": something
      - "dependent_ssi_total": something
      - "pension_type_1": something
      - "user_pension_1": something
      - "spouse_pension_1": something
      - "dependent_pension_1": something
      - "user_pension_2": something
      - "spouse_pension_2": something
      - "dependent_pension_2": something
      - "pension_type_2": something
      - "user_snap_total": something
      - "spouse_snap_total": something
      - "dependent_snap_total": something
      - "user_rent_income_total": something
      - "spouse_rent_income_total": something
      - "dependent_rent_income_total": something
      - "user_room_board_total": something
      - "spouse_room_board_total": something
      - "dependent_room_board_total": something
      - "user_child_support_total": something
      - "spouse_child_support_total": something
      - "dependent_child_support_total": something
      - "user_other_support_total": something
      - "spouse_other_support_total": something
      - "dependent_other_support_total": something
      - "user_asset_income_total": something
      - "spouse_asset_income_total": something
      - "dependent_asset_income_total": something
      - "user_other_total": something
      - "spouse_other_total": something
      - "dependent_other_total": something
      - "user_income_total": something
      - "spouse_income_total": something
      - "dependent_income_total": something
      - "grand_total": something
      - "remarks": something
      - "expense_rent": something
      - "expense_food": something
      - "expense_utilities": something
      - "expense_fuel": something
      - "expense_clothing": something
      - "expense_household_items": something
      - "expense_property_tax": something
      - "expense_insurance": something
      - "expense_medical": something
      - "expense_car_loan": something
      - "expense_car": something
      - "expense_transportation": something
      - "expense_tuition": something
      - "expense_court_ordered": something
      - "expense_cc_minimum": something
      - "expense_other": something
      - "expense_total": something
      - "expense_remarks": something
      - "monthly_income": something
      - "monthly_expenses": something
      - "adjusted_expenses": something
      - "expense_vs_income_total": something
      - "expenses_exceed_income_explanation": something
      - "financial_situation_will_change_yes": ${ will_receive_inheritance } # TODO
      - "financial_situation_will_change_no": ${ not will_receive_inheritance } # TODO
      - "financial_situation_will_change_explanation": ${ will_receive_inheritance_explanation }
      - "assets_grand_total": something
      - "cant_convert_countable_asset_no": No
      - "cant_convert_countable_asset_yes": No
      - "cant_convert_countable_asset_explanation": something
      - "remarks_continued": something
      - "authorize_disclosure_to_ssa_yes": No
      - "authorize_disclosure_to_ssa_no": No
      - "customer_signature": |
          ${ user.signature }
      - "user_mailing_address": something
      - "signature_date": something
      - "legal_representative_signature": |
          ${ user.signature }
      - "legal_representative_mailing_address": something
      - "signature_date_2": ${ today() }
      - "user_signature": |
          ${ showifdef('client.signature') }
      - "user_signature_date": ${ today() }
      - "phone_home": ${ client.phone_number }
      - "phone_work": ${ client.phone_work }
      - "user_city": ${ client.address.city }
      - "user_state": ${ client.address.state }
      - "user_zip": ${ client.address.zip }